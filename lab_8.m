% Задаем диапазоны значений x и y
x_range = [-2, 2]; 
y_range = [0, 1];  

% Создадим нечеткую систему с методом Мамдани
fis = mamfis('Name', 'fuzzy_system'); 

% Входные и выходные переменные
% Нечеткие множества
% Правила
% Агрегация: 
% Дефазификация

% Добавим входную переменную х
fis = addInput(fis, x_range, 'Name', 'x');
% К х добавляем нечеткие множества с помощью тройной формы
fis = addMF(fis, 'x', 'trimf', [-2, -2, -0.35], 'Name', 'отрицательный');
fis = addMF(fis, 'x', 'trimf', [-0.35, 0, 0.56], 'Name', 'нулевой');
fis = addMF(fis, 'x', 'trimf', [0.56, 2, 2], 'Name', 'положительный');

% Добавим выходную переменную у
fis = addOutput(fis, y_range, 'Name', 'y');
% К у добавляем нечеткие множества с помощью тройной формы
fis = addMF(fis, 'y', 'trimf', [0.56, 1, 1], 'Name', 'низкий');
fis = addMF(fis, 'y', 'trimf', [0.1, 0.1, 0.1], 'Name', 'средний');
fis = addMF(fis, 'y', 'trimf', [0.3, 1, 1], 'Name', 'высокий');

% Определим правила (новый синтаксис)
ruleList = [
    1 1 1 1; % если x negative, то y low
    2 2 1 1; % если x small, то y medium
    3 3 1 1; % если x positive, то y high
];

% Добавляем правила в нечеткую систему
fis = addRule(fis, ruleList);

% Создаем вектор равномерно распределенных значений
x_values = linspace(-2, 2, 100);
% Вычисляем у для заданных х, x_values передается в виде столбца
y_values = evalfis(fis, x_values'); 

% Отобразим данные
figure;
plot(x_values, y_values, 'b-');
hold on;
plot([-2 -0.35 0 0.56 2], [1 0.56 0.1 0.3 1], 'ro'); % исходные данные
title('Соотношение выходных и входных данных нечеткой системы');
xlabel('x');
ylabel('y');
grid on;
legend('Нечеткий вывод', 'Точки данных');
hold off;